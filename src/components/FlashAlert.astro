---
interface Props {
  message?: string;
  shown?: boolean;
  hxSwapOob?: boolean;
}

const { message, shown, hxSwapOob: hxSwapOob } = Astro.props;
---

<div
  id="flash"
  role="alert"
  class="alert alert-error fixed top-0 left-0 cursor-pointer"
  hx-swap-oob={hxSwapOob}
  x-data={`{isShown: ${shown}}`}
  x-init="() => { setTimeout(() => { isShown = false }, 5000) }"
  x-show="isShown"
  x-transition.duration.250ms
  x-cloak
  x-on:click="isShown = false"
>
  <svg
    xmlns="http://www.w3.org/2000/svg"
    class="stroke-current shrink-0 h-6 w-6"
    fill="none"
    viewBox="0 0 24 24"
    ><path
      stroke-linecap="round"
      stroke-linejoin="round"
      stroke-width="2"
      d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
    ></path></svg
  >
  <span>{message}</span>
</div>

<style is:global>
  #flash.htmx-added {
    opacity: 0;
    transform: scale(0.9);
  }
  #flash {
    opacity: 1;
    transition: all 0.5s ease-out;
  }
</style>
