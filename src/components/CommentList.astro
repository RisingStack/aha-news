---
import Comment, { type CommentWithComments } from "./Comment.astro";

interface Props {
  postId: number;
  comments: CommentWithComments[];
  depth: number;
  hiddenCommentIds: number[];
  parentCommentId?: number;
  newId?: number;
}

const { postId, comments, depth, hiddenCommentIds, parentCommentId, newId } =
  Astro.props;
---

{
  comments?.map((comment, i) => {
    const prevCommentId = comments[i - 1]?.id;
    const nextCommentId = comments[i + 1]?.id;

    return (
      <Comment
        postId={postId}
        comment={comment}
        hiddenCommentIds={hiddenCommentIds}
        prevCommentId={prevCommentId}
        nextCommentId={nextCommentId}
        parentCommentId={parentCommentId}
        depth={depth}
        newId={newId}
      />
    );
  })
}
